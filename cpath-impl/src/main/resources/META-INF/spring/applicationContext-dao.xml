<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<context:annotation-config />

	<context:property-placeholder location="file:${CPATH2_HOME}/cpath2.properties"/>
	
	<context:component-scan base-package="cpath.dao.internal" />
	
    <!-- enable the configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="pcTransactionManager"/>
 
    <bean id="pcTransactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="pcSessionFactory" />
    </bean>
    
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
	<bean id="pcSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties" ref="hibernateProperties"/>
		<property name="annotatedClasses">
			<list>
				<value>org.biopax.paxtools.impl.BioPAXElementImpl</value>
			</list>
		</property>
		<property name="packagesToScan">
			<list>
				<value>org.biopax.paxtools.impl.level3</value>
			</list>
		</property>
	</bean>		

	<beans profile="prod">
		<bean id="dataSource" class="org.h2.jdbcx.JdbcConnectionPool"
			destroy-method="dispose">
			<constructor-arg>
				<bean class="org.h2.jdbcx.JdbcDataSource">
					<!-- using h2 tuning properties (risky, aye, but greatly improves persisting and indexing the merged biopax model once;
					then, we normally just use in-memory BioPAX Model (from the file archive) instead, 
					and the db becomes read-only and for search queries only) -->
					<property name="URL" value="${cpath2.db.connection}${cpath2.db};MV_STORE=FALSE;MVCC=FALSE;LOG=0;CACHE_SIZE=131072" /> <!-- ;LOCK_MODE=0;UNDO_LOG=0 -->
					<property name="user" value="${cpath2.db.user}" />
					<property name="password" value="${cpath2.db.password}" />
				</bean>
			</constructor-arg>
		</bean>

		<util:properties id="hibernateProperties" local-override="true"
				location="file:${CPATH2_HOME}/hibernate.properties">
				<prop key="hibernate.dialect">${cpath2.db.dialect}</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.connection.autoReconnect">true</prop>
				<prop key="hibernate.search.default.indexBase">${CPATH2_HOME}/${cpath2.db}</prop>
				<prop key="hibernate.search.indexing_strategy">manual</prop>
				<prop key="hibernate.search.lucene_version">LUCENE_36</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
		</util:properties>
	</beans>

	<beans profile="dev">
		<bean id="dataSource" class="org.h2.jdbcx.JdbcConnectionPool"
			destroy-method="dispose">
			<constructor-arg>
				<bean class="org.h2.jdbcx.JdbcDataSource">
					<!-- using embedded in-memory db for testing; delegate h2 logging to 
						cpath2's slf4/logback; make this db alive while JVM is alive -->
					<property name="URL" value="jdbc:h2:mem:test1" />
					<property name="user" value="sa" />
					<property name="password" value="" />
				</bean>
			</constructor-arg>
		</bean>

		<util:properties id="hibernateProperties" local-override="true"
				location="file:${CPATH2_HOME}/hibernate.properties">
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.dialect">${cpath2.db.dialect}</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.connection.autoReconnect">true</prop>
				<prop key="hibernate.search.default.indexBase">${CPATH2_HOME}/tmp/test1.idx</prop>
				<prop key="hibernate.search.indexing_strategy">manual</prop>
				<prop key="hibernate.search.lucene_version">LUCENE_36</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
		</util:properties>
	</beans>
	
	<beans profile="test">
		<bean id="dataSource" class="org.h2.jdbcx.JdbcConnectionPool"
			destroy-method="dispose">
			<constructor-arg>
				<bean class="org.h2.jdbcx.JdbcDataSource">
					<!-- using another embedded in-memory db for testing; delegate h2 logging to 
						cpath2's slf4/logback; make this db alive while JVM is alive -->
					<property name="URL"
						value="jdbc:h2:mem:test2" />
					<property name="user" value="sa" />
					<property name="password" value="" />
				</bean>
			</constructor-arg>
		</bean>

		<util:properties id="hibernateProperties" local-override="true"
				location="file:${CPATH2_HOME}/hibernate.properties">
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.dialect">${cpath2.db.dialect}</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.connection.autoReconnect">true</prop>
				<prop key="hibernate.search.default.indexBase">${CPATH2_HOME}/tmp/test2.idx</prop>
				<prop key="hibernate.search.indexing_strategy">manual</prop>
				<prop key="hibernate.search.lucene_version">LUCENE_36</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
		</util:properties>
	</beans>
		
</beans>
