<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
     	http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

    <context:annotation-config/>
    <context:property-placeholder location="file:${CPATH2_HOME}/cpath.properties"/>

	<bean id="outputFormatConverter" class="cpath.service.internal.OutputFormatConverterImpl">
        <constructor-arg value="file:${CPATH2_HOME}/blacklist.txt"/>
	</bean>

	<bean id="service" class="cpath.service.internal.CPathServiceImpl">
		<constructor-arg ref="paxtoolsDAO"/>
		<constructor-arg ref="metadataDAO"/>
		<constructor-arg ref="outputFormatConverter"/>
        <constructor-arg value="file:${CPATH2_HOME}/blacklist.txt"/>
	</bean>

	<!-- in addition to Hibernate L2 cache, we can set up a general-purpose java ehcache; shelved for later... -->
	<bean id="defaultCacheKeyGenerator" class="com.googlecode.ehcache.annotations.key.StringCacheKeyGenerator" />
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" >
		<property name="configLocation" value="file:${CPATH2_HOME}/ehcache-hibernate.xml"/>
		<property name="shared" value="true"/>
	</bean>
	<ehcache:annotation-driven cache-manager="cacheManager" default-cache-key-generator="defaultCacheKeyGenerator" />

</beans>