<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-1.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
    
    <!-- 
    	Integration of BioPAX Validator into the cPathSquared (cPath^2) import pipeline
    	is implemented by simply using the required biopax-validator modules/classes in this
    	application. However, (IMPORTANT thing is) unlike the stand-alone BioPAX Validator, 
    	AspectJ Load-Time Weaving (LTW) is NOT used here; instead, Spring's default 
    	proxy-based AOP is used (thus there is no need in the  -javaagent JVM argument).
    -->  
    
    <context:annotation-config/>
     
    <aop:aspectj-autoproxy/>
    
    <context:spring-configured/>
       
    <context:property-placeholder location="classpath:validation.properties"/>
    
    <!-- Use BioPAX Rules's Configuration -->
    <import resource="classpath:rules-context.xml"/>
    
	<!-- BiopaxValidatorUtils configuration -->
	
    <oxm:jaxb2-marshaller id="resultsMarshaller" xmlns="http://www.biopax.org/validator">
		<oxm:class-to-be-bound name="org.biopax.validator.result.Validation"/>
		<oxm:class-to-be-bound name="org.biopax.validator.result.ValidatorResponse"/>
	</oxm:jaxb2-marshaller>

 	<!-- This is for the rules's and error messages's auto-configuration -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
		 	<!-- note: values in the list are, in fact, translated as classpath:name.properties -->
			<list>
				<value>rule-descriptions</value>
				<value>error-codes</value>
				<value>validation</value>
			</list>
		</property>
	</bean>
      
	<bean id="utils" class="org.biopax.validator.utils.BiopaxValidatorUtils">
		<property name="xsltResource" value="classpath:default-result.xsl"/>
		<property name="messageSource" ref="messageSource" />
		<property name="marshaller" ref="resultsMarshaller" />
		<property name="locale" value="en" />
		<property name="maxErrors" value="50" />
	</bean>

	<bean id="editorMap3" class="org.biopax.paxtools.io.simpleIO.SimpleEditorMap">
		<constructor-arg type="org.biopax.paxtools.model.BioPAXLevel" value="L3"/>
	</bean>

	<bean id="editorMap2" class="org.biopax.paxtools.io.simpleIO.SimpleEditorMap">
		<constructor-arg type="org.biopax.paxtools.model.BioPAXLevel" value="L2"/>
	</bean>

	<!-- a helper and a proxy to access MIRIAM and MI database citation and regexps 
   		to validate their corresponding IDs -->
    <bean id="xrefHelper" class="org.biopax.validator.utils.XrefHelper">
		<constructor-arg ref="extraDbSynonyms"/>
        <constructor-arg ref="cvFetcher" />
        <constructor-arg ref="miriamAdapter"/>
    </bean>
	
	
	<bean id="validator" class="cpath.validator.BiopaxValidator"/>
	
	<bean id="messenger" class="org.biopax.validator.impl.SimplyThrowExceptionMessenger"/>
	
	<bean id="behaviorAspect" class="org.biopax.validator.impl.BehaviorAspect"/>
	
	<bean id="exceptionsAspect" class="org.biopax.validator.impl.ExceptionsAspect"/>
	
	<context:component-scan base-package="org.biopax.validator.rules"/>
</beans>
