<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@page language="java" contentType="text/html; charset=UTF-8"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<!DOCTYPE html>
<html>
<head>
<jsp:include page="head.jsp" />
<title>Downloads</title>
</head>
<body>
	<jsp:include page="header.jsp" />
<!-- 	  <div class="row"> -->
		<div class="jumbotron">
			<h2>Batch Downloads</h2>
			<blockquote><p>
				Data Archives below are sorted alphabetically and named as follows:</p>
				<code>${cpath.name}.${cpath.version}.&lt;SOURCE&gt;.&lt;FORMAT&gt;.&lt;ext&gt;.gz</code>
			</blockquote>
			<em>&lt;SOURCE&gt;</em> is a standard name, taxonomy ID, or 'All'<br/>
			<em>&lt;FORMAT&gt;</em> is one of the Output Formats<br/> 
			<em>&lt;ext&gt;</em> is the file type.
		</div>
<!-- 	  </div> -->
		
		<h3>Notes</h3>
		<ul>
			<li><strong><a href="formats">Output Formats Description</a></strong> Also, we could generate more specific SIF
				output (e.g., to add/remove specific columns or interaction types) by request. 
				One can also do it with Paxtools, using one of the BioPAX models and blacklist.txt.</li>
			<li><strong>Archives by source</strong> - each was generated by searching for all BioPAX Entities 
				associated with the organism or data source and making a new BioPAX sub-model, 
				which is then converted to other formats.</li>
			<li><strong>Blacklist</strong> 
				- <a href="http://code.google.com/p/biopax-pattern/wiki/UsingBinaryInteractionFramework#Blacklisting_ubiquitous_small_molecules" 
				target="_blank">blacklist.txt file description</a></li>
			<li><strong>Validation</strong> - one can download full <a href='<c:url value="/validations"/>'>
				BioPAX validation reports (quite simple XML)</a></li>
			<li><strong>Detailed_Process_Data file</strong> - is an additional BioPAX archive that integrates data 
				only from the BioPAX data sources (i.e, excluding converted PSI-MI).</li>
			<li><strong>Other</strong> - one can also get <a href='<c:url value="/datadir"/>'>original and normalized files</a> 
				(at various intermediate states, e.g., after cleaned, converted, normalized, before merged).</li>	
		</ul>
		
		<h3>Files</h3>
		<ul>
			<c:forEach var="f" items="${files}">
				<li><a href='<c:url value="/downloads/${f.key}"/>'>${f.key}</a>&nbsp;(${f.value})</li>
			</c:forEach>
		</ul>

	<jsp:include page="footer.jsp" />
</body>
</html>
